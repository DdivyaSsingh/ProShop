{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducers, productDetailsReducers, productDeleteReducers, productCreateReducers, productUpdateReducers, productReviewCreateReducer } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from \"./reducers/userReducer\";\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer, ordersListReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducers,\n  productDelete: productDeleteReducers,\n  productCreate: productCreateReducers,\n  productUpdate: productUpdateReducers,\n  productReviewCreate: productReviewCreateReducer,\n  ProductTopproductTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  ordersList: ordersListReducer\n});\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  },\n  userRegister: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducers","productDeleteReducers","productCreateReducers","productUpdateReducers","productReviewCreateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDeliverReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","ordersListReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","ProductTopproductTopRatedReducer","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","ordersList","shippingAddressFromStorage","localStorage","getItem","JSON","parse","cartItemsFromStorage","userInfoFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/Users/ASUS/Desktop/Proshop/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducers,\r\n  productDetailsReducers,\r\n  productDeleteReducers,\r\n  productCreateReducers,\r\n  productUpdateReducers,\r\n  productReviewCreateReducer,\r\n} from \"./reducers/productReducer\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducer\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDeliverReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderPayReducer,\r\n  ordersListReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducers,\r\n  productDetails: productDetailsReducers,\r\n  productDelete: productDeleteReducers,\r\n  productCreate: productCreateReducers,\r\n  productUpdate: productUpdateReducers,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  ProductTopproductTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  ordersList: ordersListReducer,\r\n});\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  userRegister: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,mBADF,EAEEC,sBAFF,EAGEC,qBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,0BANF,QAOO,2BAPP;AAQA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,wBARP;AASA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,kBAJF,EAKEC,eALF,EAMEC,iBANF,QAOO,0BAPP;AASA,MAAMC,OAAO,GAAGxB,eAAe,CAAC;EAC9ByB,WAAW,EAAErB,mBADiB;EAE9BsB,cAAc,EAAErB,sBAFc;EAG9BsB,aAAa,EAAErB,qBAHe;EAI9BsB,aAAa,EAAErB,qBAJe;EAK9BsB,aAAa,EAAErB,qBALe;EAM9BsB,mBAAmB,EAAErB,0BANS;EAO9BsB,gCAP8B;EAQ9BC,IAAI,EAAEtB,WARwB;EAS9BuB,SAAS,EAAEtB,gBATmB;EAU9BuB,YAAY,EAAEtB,mBAVgB;EAW9BuB,WAAW,EAAEtB,kBAXiB;EAY9BuB,iBAAiB,EAAEtB,wBAZW;EAa9BuB,QAAQ,EAAEtB,eAboB;EAc9BuB,UAAU,EAAEtB,iBAdkB;EAe9BuB,UAAU,EAAEtB,iBAfkB;EAgB9BuB,WAAW,EAAEtB,kBAhBiB;EAiB9BuB,YAAY,EAAErB,mBAjBgB;EAkB9BsB,QAAQ,EAAEpB,eAlBoB;EAmB9BqB,YAAY,EAAExB,mBAnBgB;EAoB9ByB,WAAW,EAAEvB,kBApBiB;EAqB9BwB,UAAU,EAAEtB;AArBkB,CAAD,CAA/B;AAwBA,MAAMuB,0BAA0B,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAGA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAGA,MAAMI,mBAAmB,GAAGL,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMK,YAAY,GAAG;EACnBrB,IAAI,EAAE;IACJsB,SAAS,EAAEH,oBADP;IAEJI,eAAe,EAAET;EAFb,CADa;EAKnBb,SAAS,EAAE;IAAEuB,QAAQ,EAAEJ;EAAZ,CALQ;EAMnBlB,YAAY,EAAE;IAAEsB,QAAQ,EAAEJ;EAAZ;AANK,CAArB;AASA,MAAMK,UAAU,GAAG,CAACvD,KAAD,CAAnB;AAEA,MAAMwD,KAAK,GAAG3D,WAAW,CACvByB,OADuB,EAEvB6B,YAFuB,EAGvBlD,mBAAmB,CAACF,eAAe,CAAC,GAAGwD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}