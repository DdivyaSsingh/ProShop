{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Proshop\\\\frontend\\\\src\\\\Screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../Components/Message\";\nimport Loader from \"../Components/Loader\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { listMyOrders } from \"../actions/orderActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrder,\n    error: errorOrder,\n    orders\n  } = orderListMy;\n  useEffect(() => {\n    if (!userInfo) {\n      navigate(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails(\"/profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, userInfo, navigate, user, dispatch]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (name === \"\") {\n      setMessage(\"Invalid Enteries\");\n    } else if (confirmPassword !== password) {\n      setMessage(\"Password And Confirm Password Do not Match\");\n    } else {\n      dispatch(updateUserProfile({\n        _id: user.id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" User Profile \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Profile Updated Successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"formGroup\",\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"formGroup\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"formGroup\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"formGroup\",\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"reactBootstrapButton\",\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileScreen, \"hQhbT7N0AIfeFJmcSJGKGJsbnoQ=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","useNavigate","getUserDetails","updateUserProfile","listMyOrders","ProfileScreen","history","navigate","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrder","errorOrder","orders","submitHandler","e","preventDefault","_id","id","target","value"],"sources":["C:/Users/ASUS/Desktop/Proshop/frontend/src/Screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../Components/Message\";\r\nimport Loader from \"../Components/Loader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getUserDetails,updateUserProfile} from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading:loadingOrder, error:errorOrder, orders } = orderListMy;\r\n\r\n  \r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    }\r\n    else{\r\n        if (!user.name) {\r\n            dispatch(getUserDetails(\"/profile\"));\r\n            dispatch(listMyOrders())\r\n          } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n          }\r\n    }\r\n  }, [history, userInfo , navigate, user, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name === \"\") {\r\n      setMessage(\"Invalid Enteries\");\r\n    } else if (confirmPassword !== password) {\r\n      setMessage(\"Password And Confirm Password Do not Match\");\r\n    } else {\r\n      dispatch(updateUserProfile({_id: user.id,name,email,password}))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h1> User Profile </h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated Successfully!</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group className=\"formGroup\" controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group className=\"formGroup\" controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group className=\"formGroup\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group className=\"formGroup\" controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button\r\n            className=\"reactBootstrapButton\"\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAwBC,iBAAxB,QAAgD,wBAAhD;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;AAEA,MAAMC,aAAa,GAAG,QAAiB;EAAA;;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EACrC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EAEA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCxB,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,IAAD,CAAtC;EAEA,MAAM2B,QAAQ,GAAGrB,WAAW,EAA5B;EAEA,MAAMsB,WAAW,GAAGrB,WAAW,CAAEsB,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;EACA,MAAM;IAAEE,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BJ,WAAjC;EAEA,MAAMK,SAAS,GAAG1B,WAAW,CAAEsB,KAAD,IAAWA,KAAK,CAACI,SAAlB,CAA7B;EACA,MAAM;IAAEC;EAAF,IAAeD,SAArB;EAEA,MAAME,iBAAiB,GAAG5B,WAAW,CAAEsB,KAAD,IAAWA,KAAK,CAACM,iBAAlB,CAArC;EACA,MAAM;IAAEC;EAAF,IAAcD,iBAApB;EAEA,MAAME,WAAW,GAAG9B,WAAW,CAAEsB,KAAD,IAAWA,KAAK,CAACQ,WAAlB,CAA/B;EACA,MAAM;IAAEP,OAAO,EAACQ,YAAV;IAAwBP,KAAK,EAACQ,UAA9B;IAA0CC;EAA1C,IAAqDH,WAA3D;EAGApC,SAAS,CAAC,MAAM;IACd,IAAI,CAACiC,QAAL,EAAe;MACblB,QAAQ,CAAC,QAAD,CAAR;IACD,CAFD,MAGI;MACA,IAAI,CAACgB,IAAI,CAACf,IAAV,EAAgB;QACZU,QAAQ,CAAChB,cAAc,CAAC,UAAD,CAAf,CAAR;QACAgB,QAAQ,CAACd,YAAY,EAAb,CAAR;MACD,CAHH,MAGS;QACLK,OAAO,CAACc,IAAI,CAACf,IAAN,CAAP;QACAG,QAAQ,CAACY,IAAI,CAACb,KAAN,CAAR;MACD;IACN;EACF,CAbQ,EAaN,CAACJ,OAAD,EAAUmB,QAAV,EAAqBlB,QAArB,EAA+BgB,IAA/B,EAAqCL,QAArC,CAbM,CAAT;;EAeA,MAAMc,aAAa,GAAIC,CAAD,IAAO;IAC3BA,CAAC,CAACC,cAAF;;IAEA,IAAI1B,IAAI,KAAK,EAAb,EAAiB;MACfS,UAAU,CAAC,kBAAD,CAAV;IACD,CAFD,MAEO,IAAIH,eAAe,KAAKF,QAAxB,EAAkC;MACvCK,UAAU,CAAC,4CAAD,CAAV;IACD,CAFM,MAEA;MACLC,QAAQ,CAACf,iBAAiB,CAAC;QAACgC,GAAG,EAAEZ,IAAI,CAACa,EAAX;QAAc5B,IAAd;QAAmBE,KAAnB;QAAyBE;MAAzB,CAAD,CAAlB,CAAR;IACD;EACF,CAVD;;EAYA,oBACE,QAAC,GAAD;IAAA,wBACE,QAAC,GAAD;MAAK,EAAE,EAAE,CAAT;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGI,OAAO,iBAAI,QAAC,OAAD;QAAS,OAAO,EAAC,QAAjB;QAAA,UAA2BA;MAA3B;QAAA;QAAA;QAAA;MAAA,QAFd,EAGGM,KAAK,iBAAI,QAAC,OAAD;QAAS,OAAO,EAAC,QAAjB;QAAA,UAA2BA;MAA3B;QAAA;QAAA;QAAA;MAAA,QAHZ,EAIGK,OAAO,iBAAI,QAAC,OAAD;QAAS,OAAO,EAAC,SAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJd,EAKGN,OAAO,iBAAI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QALd,eAME,QAAC,IAAD;QAAM,QAAQ,EAAEW,aAAhB;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,WAAtB;UAAkC,SAAS,EAAC,MAA5C;UAAA,wBACE,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;YACE,IAAI,EAAC,MADP;YAEE,WAAW,EAAC,YAFd;YAGE,KAAK,EAAExB,IAHT;YAIE,QAAQ,EAAGyB,CAAD,IAAOxB,OAAO,CAACwB,CAAC,CAACI,MAAF,CAASC,KAAV;UAJ1B;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAUE,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,WAAtB;UAAkC,SAAS,EAAC,OAA5C;UAAA,wBACE,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;YACE,IAAI,EAAC,OADP;YAEE,WAAW,EAAC,aAFd;YAGE,KAAK,EAAE5B,KAHT;YAIE,QAAQ,EAAGuB,CAAD,IAAOtB,QAAQ,CAACsB,CAAC,CAACI,MAAF,CAASC,KAAV;UAJ3B;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAVF,eAmBE,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,WAAtB;UAAkC,SAAS,EAAC,UAA5C;UAAA,wBACE,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;YACE,IAAI,EAAC,UADP;YAEE,WAAW,EAAC,gBAFd;YAGE,KAAK,EAAE1B,QAHT;YAIE,QAAQ,EAAGqB,CAAD,IAAOpB,WAAW,CAACoB,CAAC,CAACI,MAAF,CAASC,KAAV;UAJ9B;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBF,eA4BE,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,WAAtB;UAAkC,SAAS,EAAC,iBAA5C;UAAA,wBACE,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;YACE,IAAI,EAAC,UADP;YAEE,WAAW,EAAC,wBAFd;YAGE,KAAK,EAAExB,eAHT;YAIE,QAAQ,EAAGmB,CAAD,IAAOlB,kBAAkB,CAACkB,CAAC,CAACI,MAAF,CAASC,KAAV;UAJrC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QA5BF,eAsCE,QAAC,MAAD;UACE,SAAS,EAAC,sBADZ;UAEE,IAAI,EAAC,QAFP;UAGE,OAAO,EAAC,SAHV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAtCF;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAsDE,QAAC,GAAD;MAAK,EAAE,EAAE,CAAT;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAtDF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4DD,CA/GD;;GAAMjC,a;UACaJ,W,EAQAJ,W,EAEGC,W,EAGFA,W,EAGQA,W,EAGNA,W;;;KApBhBO,a;AAiHN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}