{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducers, productDetailsReducers } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from \"./reducers/userReducer\";\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  },\n  userRegister: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducers","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","shippingAddressFromStorage","localStorage","getItem","JSON","parse","cartItemsFromStorage","userInfoFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/Users/ASUS/Desktop/Proshop/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducers,\r\n  productDetailsReducers,\r\n} from \"./reducers/productReducer\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n} from \"./reducers/userReducer\";\r\nimport { orderCreateReducer , orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducers,\r\n  productDetails: productDetailsReducers,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy:orderListMyReducer,\r\n});\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  userRegister: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,mBADF,EAEEC,sBAFF,QAGO,2BAHP;AAIA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,QAKO,wBALP;AAMA,SAASC,kBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,eAAvE,QAA8F,0BAA9F;AAEA,MAAMC,OAAO,GAAGf,eAAe,CAAC;EAC9BgB,WAAW,EAAEZ,mBADiB;EAE9Ba,cAAc,EAAEZ,sBAFc;EAG9Ba,IAAI,EAAEZ,WAHwB;EAI9Ba,SAAS,EAAEZ,gBAJmB;EAK9Ba,YAAY,EAAEZ,mBALgB;EAM9Ba,WAAW,EAAEZ,kBANiB;EAO9Ba,iBAAiB,EAAEZ,wBAPW;EAQ9Ba,WAAW,EAAEZ,kBARiB;EAS9Ba,YAAY,EAAEZ,mBATgB;EAU9Ba,QAAQ,EAAEX,eAVoB;EAW9BY,WAAW,EAACb;AAXkB,CAAD,CAA/B;AAcA,MAAMc,0BAA0B,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAGA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAGA,MAAMI,mBAAmB,GAAGL,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMK,YAAY,GAAG;EACnBhB,IAAI,EAAE;IACJiB,SAAS,EAAEH,oBADP;IAEJI,eAAe,EAAET;EAFb,CADa;EAKnBR,SAAS,EAAE;IAAEkB,QAAQ,EAAEJ;EAAZ,CALQ;EAMnBb,YAAY,EAAE;IAAEiB,QAAQ,EAAEJ;EAAZ;AANK,CAArB;AASA,MAAMK,UAAU,GAAG,CAACpC,KAAD,CAAnB;AAEA,MAAMqC,KAAK,GAAGxC,WAAW,CACvBgB,OADuB,EAEvBmB,YAFuB,EAGvB/B,mBAAmB,CAACF,eAAe,CAAC,GAAGqC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}