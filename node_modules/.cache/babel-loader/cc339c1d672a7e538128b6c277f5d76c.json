{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducers, productDetailsReducers } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducer';\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer\n});\nconst arr = [{\n  product: 0,\n  name: 'abc',\n  price: 10,\n  countInStock: 0,\n  qty: 7\n}];\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [...arr];\nconst initialState = {\n  cart: {\n    cartitems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducers","cartReducer","reducer","productList","productDetails","cart","arr","product","name","price","countInStock","qty","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartitems","middleware","store"],"sources":["C:/Users/ASUS/Desktop/Proshop/frontend/src/store.js"],"sourcesContent":["import { createStore , combineReducers , applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducers ,productDetailsReducers } from './reducers/productReducer';\r\nimport { cartReducer } from './reducers/cartReducer';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducers,\r\n    productDetails: productDetailsReducers,\r\n    cart: cartReducer,\r\n});\r\n \r\nconst arr = [{\r\n        product: 0,\r\n        name: 'abc',\r\n        price: 10,\r\n        countInStock: 0,\r\n        qty : 7   \r\n}] \r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [...arr];\r\n\r\nconst initialState = {\r\n    cart: {cartitems: cartItemsFromStorage}\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,eAAvB,EAAyCC,eAAzC,QAAgE,OAAhE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,QAA4D,2BAA5D;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;EAC5BQ,WAAW,EAAEJ,mBADe;EAE5BK,cAAc,EAAEJ,sBAFY;EAG5BK,IAAI,EAAEJ;AAHsB,CAAD,CAA/B;AAMA,MAAMK,GAAG,GAAG,CAAC;EACLC,OAAO,EAAE,CADJ;EAELC,IAAI,EAAE,KAFD;EAGLC,KAAK,EAAE,EAHF;EAILC,YAAY,EAAE,CAJT;EAKLC,GAAG,EAAG;AALD,CAAD,CAAZ;AAQA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,CAAC,GAAGR,GAAJ,CAAjH;AAEA,MAAMW,YAAY,GAAG;EACjBZ,IAAI,EAAE;IAACa,SAAS,EAAEN;EAAZ;AADW,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACtB,KAAD,CAAnB;AAEA,MAAMuB,KAAK,GAAG1B,WAAW,CAACQ,OAAD,EAASe,YAAT,EAAsBnB,mBAAmB,CAACF,eAAe,CAAC,GAAGuB,UAAJ,CAAhB,CAAzC,CAAzB;AAEA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}