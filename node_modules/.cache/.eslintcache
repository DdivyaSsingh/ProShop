[{"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Footer.js":"4","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Header.js":"5","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\homeScreen.js":"6","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Product.js":"7","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Rating.js":"8","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\ProductScreen.js":"9","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\store.js":"10","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\reducers\\productReducer.js":"11","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Loader.js":"14","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Message.js":"15","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\CartScreen.js":"16","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\reducers\\cartReducer.js":"17","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\actions\\cartActions.js":"19","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\reducers\\userReducer.js":"20","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\constants\\userConstants.js":"21","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\LoginScreen.js":"22","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\FormContainer.js":"23","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\actions\\userActions.js":"24","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\RegisterScreen.js":"25","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\ProfileScreen.js":"26","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\ShippingScreen.js":"27","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\CheckoutStep.js":"28","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\PaymentScreen.js":"29","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\PlaceOrderScreen.js":"30","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\reducers\\orderReducers.js":"31","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\constants\\orderConstants.js":"32","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\actions\\orderActions.js":"33","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\OrderScreen.js":"34","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\UserListScreen.js":"35","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\UserEditScreen.js":"36","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\ProductListScreen.js":"37","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\ProductEditScreen.js":"38","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\OrderListScreen.js":"39","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\SearchBox.js":"40","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\ProductCarousel.js":"41","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Meta.js":"42"},{"size":421,"mtime":1655759010321,"results":"43","hashOfConfig":"44"},{"size":2504,"mtime":1657574161502,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1654807583282,"results":"46","hashOfConfig":"44"},{"size":364,"mtime":1654810563843,"results":"47","hashOfConfig":"44"},{"size":2576,"mtime":1657574238290,"results":"48","hashOfConfig":"44"},{"size":1433,"mtime":1657616413970,"results":"49","hashOfConfig":"44"},{"size":846,"mtime":1654935192635,"results":"50","hashOfConfig":"44"},{"size":1919,"mtime":1657555203628,"results":"51","hashOfConfig":"44"},{"size":7300,"mtime":1657616298205,"results":"52","hashOfConfig":"44"},{"size":2475,"mtime":1657581112236,"results":"53","hashOfConfig":"44"},{"size":4256,"mtime":1657580128571,"results":"54","hashOfConfig":"44"},{"size":1603,"mtime":1657578479761,"results":"55","hashOfConfig":"44"},{"size":5162,"mtime":1657578811933,"results":"56","hashOfConfig":"44"},{"size":325,"mtime":1656018930489,"results":"57","hashOfConfig":"44"},{"size":255,"mtime":1655930106797,"results":"58","hashOfConfig":"44"},{"size":3940,"mtime":1656263480792,"results":"59","hashOfConfig":"44"},{"size":1369,"mtime":1656271726001,"results":"60","hashOfConfig":"44"},{"size":238,"mtime":1656271318241,"results":"61","hashOfConfig":"44"},{"size":1423,"mtime":1656271373681,"results":"62","hashOfConfig":"44"},{"size":4306,"mtime":1657617798899,"results":"63","hashOfConfig":"44"},{"size":1593,"mtime":1657218117294,"results":"64","hashOfConfig":"44"},{"size":2553,"mtime":1656234362858,"results":"65","hashOfConfig":"44"},{"size":359,"mtime":1656193964857,"results":"66","hashOfConfig":"44"},{"size":6344,"mtime":1657618085655,"results":"67","hashOfConfig":"44"},{"size":3710,"mtime":1656234958248,"results":"68","hashOfConfig":"44"},{"size":5893,"mtime":1657617969581,"results":"69","hashOfConfig":"44"},{"size":2989,"mtime":1656327265888,"results":"70","hashOfConfig":"44"},{"size":1415,"mtime":1656269178425,"results":"71","hashOfConfig":"44"},{"size":1514,"mtime":1656271245947,"results":"72","hashOfConfig":"44"},{"size":5435,"mtime":1656412889339,"results":"73","hashOfConfig":"44"},{"size":3505,"mtime":1657544781573,"results":"74","hashOfConfig":"44"},{"size":1229,"mtime":1657544720855,"results":"75","hashOfConfig":"44"},{"size":5189,"mtime":1657545236362,"results":"76","hashOfConfig":"44"},{"size":7817,"mtime":1657546634371,"results":"77","hashOfConfig":"44"},{"size":2877,"mtime":1657221303132,"results":"78","hashOfConfig":"44"},{"size":3633,"mtime":1657219056907,"results":"79","hashOfConfig":"44"},{"size":3929,"mtime":1657305462729,"results":"80","hashOfConfig":"44"},{"size":5448,"mtime":1657616171253,"results":"81","hashOfConfig":"44"},{"size":2617,"mtime":1657543812841,"results":"82","hashOfConfig":"44"},{"size":882,"mtime":1657574886980,"results":"83","hashOfConfig":"44"},{"size":1341,"mtime":1657614616008,"results":"84","hashOfConfig":"44"},{"size":514,"mtime":1657615900337,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"7q0l8n",{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"89"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\index.js",[],[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\App.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Footer.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Header.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\homeScreen.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Product.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Rating.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\ProductScreen.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\store.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\reducers\\productReducer.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\constants\\productConstants.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\actions\\productActions.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Loader.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Message.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\CartScreen.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\reducers\\cartReducer.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\constants\\cartConstants.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\actions\\cartActions.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\reducers\\userReducer.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\constants\\userConstants.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\LoginScreen.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\FormContainer.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\actions\\userActions.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\RegisterScreen.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\ProfileScreen.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\ShippingScreen.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\CheckoutStep.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\PaymentScreen.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\PlaceOrderScreen.js",["218","219"],["220"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Message from \"../Components/Message\";\r\nimport CheckoutStep from \"../Components/CheckoutStep\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n  const cart = useSelector((state) => state.cart);\r\n  cart.paymentMethod = \"Paypal\";\r\n\r\n  //function for 2 decimal place\r\n  const toDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  //Prices\r\n  cart.itemsPrice = toDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = toDecimals(cart.itemsPrice > 100 ? 0 : 10);\r\n  cart.taxPrice = Number(0.18 * cart.itemsPrice).toFixed(2);\r\n  cart.totalPrice =\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      navigate(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [success, navigate]);\r\n\r\n  const placeOrderHandler = (e) => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n \r\n  return (\r\n    <>\r\n      <CheckoutStep step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong> Address: </strong>\r\n                {cart.shippingAddress.address} , {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode} ,{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping Price</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax Pirce</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  style={{ width: \"100%\" }}\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\reducers\\orderReducers.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\constants\\orderConstants.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\actions\\orderActions.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\OrderScreen.js",["221","222"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { Link, Navigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Message from \"../Components/Message\";\r\nimport Loader from \"../Components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = () => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const orderId = params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  if (!loading) {\r\n    //function for 2 decimal place\r\n    const toDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    //Prices\r\n    order.itemsPrice = toDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if(!userInfo){\r\n      navigate('/login');\r\n    }\r\n\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=USD`;\r\n      script.async = true;\r\n\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPaypalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, order, successPay, navigate, userInfo, successDeliver]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong> Name: </strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong> Email: </strong>\r\n                {order.user.email}\r\n              </p>\r\n              <p>\r\n                <strong> Address: </strong>\r\n                {order.shippingAddress.address} , {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode} ,{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  {\" \"}\r\n                  Delivered on {order.deliveredAt}{\" \"}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\"> Not Delivered </Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\"> Paid on {order.paidAt} </Message>\r\n              ) : (\r\n                <Message variant=\"danger\"> Not Paid </Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping Price</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax Pirce</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    style={{ width: \"100%\" }}\r\n                    type=\"button\"\r\n                    className=\"btn btn-block\"\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Mark as Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\UserListScreen.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\UserEditScreen.js",["223","224","225","226","227"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../Components/Message\";\r\nimport Loader from \"../Components/Loader\";\r\nimport FormContainer from \"../Components/FormContainer\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getUserDetails, updateUsers } from \"../actions/userActions\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = ({ history }) => {\r\n  const params = useParams();\r\n  const userId = params.id;\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if(successUpdate){\r\n      dispatch({type: USER_UPDATE_RESET});\r\n      navigate('/admin/userlist');\r\n    }\r\n    else{\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, user, userId,successUpdate,navigate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUsers({_id:userId,name,email,isAdmin}));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\">Go Back</Link>\r\n      <FormContainer>\r\n        <h1>Edit User </h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"formGroup\" controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group className=\"formGroup\" controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group className=\"formGroup\" controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            <Button\r\n              className=\"reactBootstrapButton\"\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\ProductListScreen.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\ProductEditScreen.js",["228","229","230","231"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Meta from \"../Components/Meta\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../Components/Message\";\r\nimport Loader from \"../Components/Loader\";\r\nimport FormContainer from \"../Components/FormContainer\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { listProductDetails, updateProducts } from \"../actions/productActions\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = () => {\r\n  const params = useParams();\r\n  const productId = params.id;\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({type: PRODUCT_UPDATE_RESET})\r\n      navigate(\"/admin/productList\");\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, product, productId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateProducts({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n        image,\r\n      }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productList\">Go Back</Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"formGroup\" controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"formGroup\" controlId=\"price\">\r\n              <Form.Label>Price </Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"formGroup\" controlId=\"brand\">\r\n              <Form.Label>Brand </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"formGroup\" controlId=\"category\">\r\n              <Form.Label>Category </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"formGroup\" controlId=\"countInStock\">\r\n              <Form.Label>Count in Stock </Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Count In Stock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"formGroup\" controlId=\"description\">\r\n              <Form.Label>Description </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              className=\"reactBootstrapButton\"\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Screens\\OrderListScreen.js",["232","233"],[],"import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button,Row,Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../Components/Message\";\r\nimport Loader from \"../Components/Loader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\nconst OrderListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const ordersList = useSelector((state) => state.ordersList);\r\n  const { loading, error, orders } = ordersList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;  \r\n\r\n  useEffect(() => {\r\n\r\n    if(userInfo && !userInfo.isAdmin){\r\n        navigate('/login');\r\n    }\r\n    else{\r\n        dispatch(listOrders());\r\n    }\r\n    \r\n  },[dispatch,userInfo,navigate])  \r\n\r\n\r\n  return (\r\n    <>\r\n    <h1>Orders</h1>\r\n    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>USER</th>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead> \r\n            <tbody>\r\n                {orders.map((order) => (\r\n                    <tr key={order._id}>\r\n                        <td>{order._id}</td>\r\n                        <td>{order.user && order.user.name}</td>\r\n                        <td>{order.createdAt.substring(0,10)}</td>\r\n                        <td>${order.totalPrice}</td>\r\n                        <td>{order.isPaid ? (order.paidAt.substring(0,10)) : <i className=\"fa-solid fa-xmark\" style={{\"color\" : \"red\"}}/>}</td>\r\n                        <td>{order.isDelivered ? order.deliveredAt.substring(0,10): <i className=\"fa-solid fa-xmark\" style={{\"color\" : \"red\"}}/>}</td>\r\n                        <td>\r\n                            <LinkContainer to={`/order/${order._id}`} >\r\n                                <Button variant='light' className='btn-sm'>\r\n                                    Details\r\n                                </Button>\r\n                            </LinkContainer>\r\n                        </td>\r\n                    </tr>\r\n                ))\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\SearchBox.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\ProductCarousel.js",[],[],"C:\\Users\\ASUS\\Desktop\\Proshop\\frontend\\src\\Components\\Meta.js",[],[],{"ruleId":"234","severity":1,"message":"235","line":1,"column":28,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"238","line":9,"column":3,"nodeType":"236","messageId":"237","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":49,"column":6,"nodeType":"241","endLine":49,"endColumn":25,"suggestions":"242","suppressions":"243"},{"ruleId":"234","severity":1,"message":"238","line":11,"column":3,"nodeType":"236","messageId":"237","endLine":11,"endColumn":16},{"ruleId":"234","severity":1,"message":"244","line":13,"column":16,"nodeType":"236","messageId":"237","endLine":13,"endColumn":24},{"ruleId":"234","severity":1,"message":"245","line":3,"column":24,"nodeType":"236","messageId":"237","endLine":3,"endColumn":27},{"ruleId":"234","severity":1,"message":"246","line":3,"column":29,"nodeType":"236","messageId":"237","endLine":3,"endColumn":32},{"ruleId":"234","severity":1,"message":"247","line":18,"column":10,"nodeType":"236","messageId":"237","endLine":18,"endColumn":22},{"ruleId":"234","severity":1,"message":"248","line":23,"column":10,"nodeType":"236","messageId":"237","endLine":23,"endColumn":17},{"ruleId":"234","severity":1,"message":"249","line":23,"column":19,"nodeType":"236","messageId":"237","endLine":23,"endColumn":29},{"ruleId":"234","severity":1,"message":"250","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":12},{"ruleId":"234","severity":1,"message":"245","line":4,"column":24,"nodeType":"236","messageId":"237","endLine":4,"endColumn":27},{"ruleId":"234","severity":1,"message":"246","line":4,"column":29,"nodeType":"236","messageId":"237","endLine":4,"endColumn":32},{"ruleId":"234","severity":1,"message":"247","line":19,"column":10,"nodeType":"236","messageId":"237","endLine":19,"endColumn":22},{"ruleId":"234","severity":1,"message":"245","line":3,"column":24,"nodeType":"236","messageId":"237","endLine":3,"endColumn":27},{"ruleId":"234","severity":1,"message":"246","line":3,"column":28,"nodeType":"236","messageId":"237","endLine":3,"endColumn":31},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ListGroupItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["251"],["252"],"'Navigate' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'searchParams' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'Meta' is defined but never used.",{"desc":"253","fix":"254"},{"kind":"255","justification":"256"},"Update the dependencies array to be: [success, navigate, order._id]",{"range":"257","text":"258"},"directive","",[1414,1433],"[success, navigate, order._id]"]